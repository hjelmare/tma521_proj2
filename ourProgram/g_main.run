reset;

option solver cplexamp;
model MTC6_v2_proj_course.mod;

data 2010-11-17_15j_MTC6.dat;

#----------------------define parameters-------------------------------------------------------------------
#param x{1..maxjobs,1..5, 1..M};
param timeStep;

#----------------------end define parameters --------------------------------------------------------------
#----------------------Define Problems---------------------------------------------------------------------
problem restrictedMasterDual:  pi, gamma, restricted_master_dual, constraint1;
# needs A and B also.... maybe....

problem relaxedRestrictedMaster: tau, relaxed_restricted_master, constraint2, constraint3; 

problem columnGenerationSubproblem: column_generation_subproblem, start_constraints2_disc, flexconstraints_disc, not_same_time_constr_disc, x_nail;

problem MTC4_disc: x_nail, s_disc, h_disc, Finish_times_and_tardiness_disc, opconstraints_disc, flexconstraints_disc, not_same_time_constr_disc, interop_time_constraints_disc, end_for_j_prec_constraints, start_constraints1_disc, start_constraints2_disc, completion_time_constraints_disc, tardiness_constraints_disc, end_constraints_disc;

option cplex_options
  'clocktype=2'
  'mipdisplay=2'
  'timing=1'
  'timelimit=7200'
  'mipgap=0.0000005'
  ;
#----------------------------------------------------------------------------------------------------------

let A:=1;
let B:=1;
let lMax := 1;
let l := lMax;

for {j in 1..maxjobs}{  #initierar x till 0 Ã¶ver alla index
  for{k in K_mach_RESOURCES}{
    for{u in 1..M}{
      let x_nail[j,k,u,1] := 0;
    }
  }
}

let timeStep := a_disc['MC1'];
for{i in JOBS}{
  let x_nail[i,'MC1',timeStep+1,1] := 1;
  let timeStep := timeStep + proc_time_disc[i];
}

# end of initialization

for { iteration in 1..10 }{
  display constraint2;  # without this, segfault. with this, happy times. no know why.
  print "hej";
  solve relaxedRestrictedMaster;
  print "hejhej";
  display constraint2;
  display constraint3;
  let {j in JOBS} pi[j] := constraint2[j];
  let {k in K_mach_RESOURCES} gamma[k] := constraint3[k];

#  display pi, gamma;

  solve columnGenerationSubproblem;
  print "hahhash";
}

display pi, gamma;
#  display x_nail[1,'MC1',1];





